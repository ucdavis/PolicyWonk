# azure-pipelines.yml ───────────────────────────────────────────────
# Monorepo: reacts only to changes under web/

trigger:
  branches: { include: ['main'] }
  paths:    { include: ['web/**'] }

pr:
  branches: { include: ['main'] }
  paths:    { include: ['web/**'] }

variables:
  acrLoginServer: policywonkcontainers.azurecr.io
  imageRepo: policywonk
  imageTag: $(Build.SourceVersion)                     # commit SHA
  fullImage: $(acrLoginServer)/$(imageRepo):$(imageTag)

stages:
# ─────────────────────────── 1) BUILD ONLY ──────────────────────────
- stage: BuildOnly
  displayName: Build (no push)
  jobs:
  - job: Build
    displayName: Docker build
    pool: { vmImage: 'ubuntu-latest' }
    steps:
    - checkout: self
    - task: Docker@2
      displayName: docker build
      inputs:
        command: build
        dockerfile: web/Dockerfile
        repository: $(imageRepo)
        arguments: -t $(fullImage)     # tag locally for tests/lint, but not pushed

# ───────────── 2) PUSH + DEPLOY  (runs only on refs/heads/main) ─────────────
- stage: PushAndDeploy
  dependsOn: BuildOnly
  condition: |
    and(
      succeeded(),
      eq(variables['Build.SourceBranch'], 'refs/heads/main')
    )
  variables:
    imageToDeploy: $(fullImage)

  jobs:
  # ---- 2a BUILD & PUSH to ACR (PROD subscription) ----
  - job: Push
    displayName: Build & push image
    pool: { vmImage: 'ubuntu-latest' }
    steps:
    - checkout: self
    - task: Docker@2
      displayName: buildAndPush
      inputs:
        command: buildAndPush
        dockerfile: web/Dockerfile
        repository: $(imageRepo)
        tags: |
          $(imageTag)
        containerRegistry: CaesProductionPolicyWonkContainerConnection    # 🔑 Docker-registry SC pointing at policywonkcontainers

  # ---- 2b DEPLOY to TEST subscription ----
  - deployment: DeployTest
    displayName: Deploy to TEST
    environment: test                           # no approvals
    dependsOn: Push
    pool: { vmImage: 'ubuntu-latest' }
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            displayName: Web App (TEST)
            inputs:
              azureSubscription: CaesTestDeploy   # ARM SC -> test subscription
              appName: policywonk-test
              containers: $(imageToDeploy)

  # ---- 2c DEPLOY to PROD (manual gate) ----
  - deployment: DeployProd
    displayName: Deploy to PROD
    environment: prod                          # add “Approvals & checks” in UI
    dependsOn: DeployTest
    pool: { vmImage: 'ubuntu-latest' }
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            displayName: Web App (PROD)
            inputs:
              azureSubscription: CaesProductionDeployPrincipal  # ARM SC -> prod subscription
              appName: policywonk
              containers: $(imageToDeploy)
